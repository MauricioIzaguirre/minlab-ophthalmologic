---
// AppSidebar.astro - Sidebar modular con configuraci√≥n externa
import { sidebarConfig } from '../../config/sidebar';

// Obtener usuario de locals (configurado por middleware)
const user = Astro.locals.user;
const currentPath = Astro.url.pathname;

// Si no hay usuario, mostrar sidebar b√°sico
if (!user) {
  return null;
}

// Obtener sidebar personalizado para el usuario
const userSidebar = sidebarConfig.utils.getSidebarForUser(user.permissions, user.role);
const activeItem = sidebarConfig.utils.findActiveItem(userSidebar, currentPath);

// Funci√≥n para determinar si una ruta est√° activa
function isActive(href: string): boolean {
  return sidebarConfig.utils.isActiveRoute(currentPath, href);
}

// Obtener iniciales del usuario
function getInitials(firstName: string, lastName: string): string {
  return (firstName.charAt(0) + lastName.charAt(0)).toUpperCase();
}
---

<aside class="sidebar" data-side="left" aria-hidden="false">
  <nav aria-label="Sidebar navigation">
    
    <!-- Header del Sidebar -->
    <header>
      <a href={sidebarConfig.header.href} class="btn-ghost p-2 h-12 w-full justify-start" aria-current={isActive(sidebarConfig.header.href) ? 'page' : undefined}>
        <div class="bg-sidebar-primary text-sidebar-primary-foreground flex aspect-square size-8 items-center justify-center rounded-lg">
          <Fragment set:html={sidebarConfig.header.logoIcon} />
        </div>
        <div class="grid flex-1 text-left text-sm leading-tight">
          <span class="truncate font-medium">{sidebarConfig.header.title}</span>
          <span class="truncate text-xs">{sidebarConfig.header.version}</span>
        </div>
      </a>
    </header>

    <!-- Contenido del Sidebar -->
    <section class="scrollbar">
      
      {userSidebar.map((group) => (
        <div role="group" aria-labelledby={`group-label-${group.id}`}>
          <h3 id={`group-label-${group.id}`}>{group.title}</h3>
          <ul>
            {group.items.map((item) => (
              <li>
                <a 
                  href={item.href}
                  aria-current={isActive(item.href) ? 'page' : undefined}
                  class={isActive(item.href) ? 'active' : undefined}
                >
                  <Fragment set:html={item.icon} />
                  <span>{item.label}</span>
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}

    </section>

    <!-- Footer del Sidebar -->
    <footer>
      <div id="popover-user" class="popover">
        <button id="popover-user-trigger" type="button" aria-expanded="false" aria-controls="popover-user-popover" class="btn-ghost p-2 h-12 w-full flex items-center justify-start" data-keep-mobile-sidebar-open="">
          
          <img src={sidebarConfig.profile.defaultAvatarUrl} class="rounded-lg shrink-0 size-8" alt={`Avatar de ${user.first_name} ${user.last_name}`}>
          <div class="grid flex-1 text-left text-sm leading-tight">
            <span class="truncate font-medium">{user.first_name} {user.last_name}</span>
            <span class="truncate text-xs">@{user.role}</span>
          </div>
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m7 15 5 5 5-5"></path>
            <path d="m7 9 5-5 5 5"></path>
          </svg>

        </button>
        <div id="popover-user-popover" data-popover="" aria-hidden="true" data-side="top" class="w-[271px] md:w-[239px]"> 
          
          <div class="grid gap-4">
            <header class="grid gap-1.5">
              <h2 class="font-semibold">Perfil Profesional</h2>
              <p class="text-muted-foreground text-sm">Gestiona tu cuenta y preferencias m√©dicas.</p>
              
              <!-- Mostrar informaci√≥n del usuario -->
              <div class="mt-2 p-2 bg-muted/50 rounded-lg">
                <div class="flex items-center gap-2 text-xs">
                  <div class="flex h-6 w-6 items-center justify-center rounded-full bg-primary text-primary-foreground font-semibold text-xs">
                    {getInitials(user.first_name, user.last_name)}
                  </div>
                  <div>
                    <p class="font-medium">{user.first_name} {user.last_name}</p>
                    <p class="text-muted-foreground">{user.email}</p>
                  </div>
                </div>
                <div class="mt-2 flex items-center gap-2 text-xs">
                  <span class="px-2 py-1 bg-primary/10 text-primary rounded-full">{user.role.replace('_', ' ').toUpperCase()}</span>
                  <span class="text-muted-foreground">{user.permissions.length} permisos</span>
                </div>
              </div>
            </header>
            <footer class="grid gap-2">
              <a href={sidebarConfig.profile.profileHref} class="btn-sm">Ver Perfil</a>
              <a href={sidebarConfig.profile.logoutHref} class="btn-sm-outline">Cerrar Sesi√≥n</a>
            </footer>
          </div>

        </div>
      </div>
    </footer>
    
  </nav>
</aside>

<!-- Debug info (solo en desarrollo)
{import.meta.env.DEV && (
  <script define:vars={{user, currentPath, userSidebar}}>
    console.log('üë§ Usuario actual:', {user});
    console.log('üõ£Ô∏è  Ruta actual:', {currentPath});
    console.log('üîê Permisos:', {permissions: user.permissions});
    console.log('üìÅ Grupos de sidebar disponibles:', {groups: userSidebar.length});
  </script>
)} 
-->
