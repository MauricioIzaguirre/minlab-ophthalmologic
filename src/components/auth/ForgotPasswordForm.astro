---
// ForgotPasswordForm.astro - Mejorado con mejor dise√±o y funcionalidad
import { actions } from 'astro:actions';

// Get any action result from the current request
const result = Astro.getActionResult(actions.recoverPassword);
const success = result?.data?.success;
---

<div class="card w-full">
  <header>
    <div class="flex justify-center mb-4">
      <div class="flex h-12 w-12 items-center justify-center rounded-full bg-blue-100">
        <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
        </svg>
      </div>
    </div>
    <h2>Reset your password</h2>
    <p>Enter your email address and we'll send you a link to reset your password</p>
  </header>

  <section>
    <form method="POST" action={actions.recoverPassword} class="form grid gap-6" id="forgot-form">
      <div class="grid gap-2">
        <label for="email">Email address</label>
        <input 
          type="email" 
          id="email" 
          name="email"
          required
          class="input"
          placeholder="Enter your email address"
          autocomplete="email"
        />
        <div class="text-xs text-muted-foreground">
          We'll send reset instructions to this email address
        </div>
      </div>

      <button type="submit" class="btn w-full" id="reset-btn">
        <span class="btn-text">Send reset link</span>
        <div class="btn-spinner hidden">
          <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
        </div>
      </button>
    </form>
  </section>

  <footer class="flex flex-col items-center gap-2 mt-6">
    <div class="flex items-center gap-2">
      <a href="/auth/login" class="text-sm text-center underline underline-offset-4 hover:text-primary transition-colors">
        ‚Üê Back to login
      </a>
    </div>
  </footer>
</div>

<!-- Success message (initially hidden) -->
{success && (
  <div class="card w-full mt-4 bg-green-50 border-green-200">
    <div class="flex items-start gap-3">
      <div class="flex h-8 w-8 items-center justify-center rounded-full bg-green-100 mt-1">
        <svg class="h-4 w-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
      </div>
      <div class="flex-1">
        <h3 class="font-semibold text-green-800 mb-1">Check your email</h3>
        <p class="text-sm text-green-700 mb-3">
          We've sent a password reset link to your email address. Please check your inbox and follow the instructions to reset your password.
        </p>
        <div class="flex flex-col gap-2 text-xs text-green-600">
          <div class="flex items-center gap-2">
            <svg class="h-3 w-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>The link will expire in 24 hours</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="h-3 w-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>Check your spam folder if you don't see it</span>
          </div>
        </div>
        <div class="mt-4">
          <button type="button" class="text-sm text-green-700 hover:text-green-800 underline" onclick="window.location.reload()">
            Send another email
          </button>
        </div>
      </div>
    </div>
  </div>
)}

<!-- Loading overlay (initially hidden) -->
<div class="card w-full hidden" id="loading-overlay">
  <div class="flex flex-col items-center gap-4 py-8">
    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
    <p class="text-muted-foreground">Sending reset link...</p>
    <p class="text-xs text-muted-foreground">This may take a few seconds</p>
  </div>
</div>

<script>
  const forgotForm = document.getElementById('forgot-form') as HTMLFormElement;
  const resetBtn = document.getElementById('reset-btn') as HTMLButtonElement;
  const btnText = resetBtn.querySelector('.btn-text');
  const btnSpinner = resetBtn.querySelector('.btn-spinner');
  const loadingOverlay = document.getElementById('loading-overlay');
  const forgotCard = document.querySelector('.card:not(.hidden)');

  // Handle form submission
  if (forgotForm) {
    forgotForm.addEventListener('submit', (e) => {
      console.log('üìß Forgot password form submitted');
      
      // Show loading state
      resetBtn.disabled = true;
      btnText!.textContent = 'Sending...';
      btnSpinner?.classList.remove('hidden');
      
      // Show loading overlay after short delay
      const loadingTimeout = setTimeout(() => {
        forgotCard?.classList.add('hidden');
        loadingOverlay?.classList.remove('hidden');
      }, 1000);
      
      // Clear timeout if form completes quickly
      const observer = new MutationObserver(() => {
        clearTimeout(loadingTimeout);
      });
      observer.observe(document.body, { childList: true, subtree: true });
    });
  }

  function resetForm() {
    if (resetBtn) {
      resetBtn.disabled = false;
      if (btnText) btnText.textContent = 'Send reset link';
      btnSpinner?.classList.add('hidden');
    }
  }

  // Clear form on back navigation
  window.addEventListener('pageshow', function(event) {
    if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
      forgotForm?.reset();
      resetForm();
    }
  });

  // Auto-focus email field
  document.addEventListener('DOMContentLoaded', () => {
    const emailField = document.getElementById('email') as HTMLInputElement;
    if (emailField && !emailField.value) {
      emailField.focus();
    }
  });
</script>

<style>
  .btn-spinner {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  .transition-colors {
    transition: color 0.2s ease;
  }
</style>