---
import type { IDoctor } from '../../types/doctors';

// src/components/doctors/DoctorCard.astro

interface Props {
  doctor: IDoctor;
  showActions?: boolean;
}

const { doctor, showActions = true } = Astro.props;

// Formatear la próxima fecha disponible
const formatNextDate = (date: Date) => {
  const today = new Date();
  const diffTime = date.getTime() - today.getTime();
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  if (diffDays === 0) return "Hoy";
  if (diffDays === 1) return "Mañana";
  if (diffDays <= 7) return `En ${diffDays} días`;
  return date.toLocaleDateString('es-ES', { 
    day: 'numeric', 
    month: 'short' 
  });
};

// Generar color del badge según especialización
const getSpecializationColor = (specialization: string) => {
  const colors: { [key: string]: string } = {
    'Oftalmología': 'badge-outline text-blue-700 bg-blue-50 border-blue-200',
    'Cardiología': 'badge-outline text-red-700 bg-red-50 border-red-200',
    'Neurología': 'badge-outline text-purple-700 bg-purple-50 border-purple-200',
    'Pediatría': 'badge-outline text-green-700 bg-green-50 border-green-200',
    'Dermatología': 'badge-outline text-pink-700 bg-pink-50 border-pink-200',
    'Ginecología': 'badge-outline text-indigo-700 bg-indigo-50 border-indigo-200',
    'Traumatología': 'badge-outline text-orange-700 bg-orange-50 border-orange-200',
    'Medicina General': 'badge-outline text-gray-700 bg-gray-50 border-gray-200',
  };
  return colors[specialization] || 'badge-outline';
};
---

<div class="card group flex flex-col h-full">
  <!-- Header con imagen del doctor - MISMO ESTILO QUE PRODUCTCARD -->
  <header class="px-2">
    <div class="relative aspect-[6/5] overflow-hidden bg-gray-100 rounded-xl">
      <img
        alt={`Foto del ${doctor.name}`}
        loading="lazy"
        width="280"
        height="233"
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300 rounded-xl"
        src={doctor.avatar || `https://images.unsplash.com/photo-1559839734-2b71ea197ec2?w=280&h=233&fit=crop&crop=face&auto=format`}
        srcset={`${doctor.avatar}?w=280&h=233&fit=crop&auto=format 1x, ${doctor.avatar}?w=560&h=466&fit=crop&auto=format 2x`}
      />
      
      <!-- Status Badge - Esquina superior derecha sobre la imagen -->
      <div class="absolute top-2 right-2 z-10">
        {doctor.isActive ? (
          <span class="badge">Activo</span>
        ) : (
          <span class="badge">Inactivo</span>
        )}
      </div>
    </div>
  </header>

  <!-- Contenido principal - Altura fija para simetría -->
  <section class="px-3 py-2 space-y-3 flex-1">
    <!-- Información básica -->
    <div>
      <h3 class="font-semibold text-lg text-foreground line-clamp-1">{doctor.name}</h3>
      <span class={getSpecializationColor(doctor.specialization)}>
        {doctor.specialization}
      </span>
    </div>

    <!-- Estadísticas -->
    <div class="grid grid-cols-2 gap-3 text-sm">
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-muted-foreground">
          <path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"></path>
        </svg>
        <span class="text-muted-foreground">{doctor.yearsOfExperience} años</span>
      </div>
      
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-500 fill-yellow-500">
          <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
        </svg>
        <span class="font-medium">{doctor.rating}</span>
        <span class="text-muted-foreground text-xs">({doctor.reviewsCount})</span>
      </div>
    </div>

    <!-- Información adicional 
    <div class="space-y-2 text-sm">
      {doctor.location && (
        <div class="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-muted-foreground">
            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path>
            <circle cx="12" cy="10" r="3"></circle>
          </svg>
          <span class="text-muted-foreground">{doctor.location}</span>
        </div>
      )}
      
      {doctor.isActive && doctor.nextAvailableDate && (
        <div class="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-muted-foreground">
            <path d="M8 2v4"></path>
            <path d="M16 2v4"></path>
            <rect width="18" height="18" x="3" y="4" rx="2"></rect>
            <path d="M3 10h18"></path>
          </svg>
          <span class="text-muted-foreground">Próximo: {formatNextDate(doctor.nextAvailableDate)}</span>
        </div>
      )}
    </div> 
    -->
    

    <!-- Bio (limitada a 2 líneas con puntos suspensivos) -->
    {doctor.bio && (
      <p class="text-sm text-muted-foreground line-clamp-2 leading-relaxed">
        {doctor.bio}
      </p>
    )}
  </section>

  <!-- Footer eliminado - Sin espacios extra -->
</div>

<style>
  /* Utilidad para limitar líneas de texto */
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>